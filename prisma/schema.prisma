generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              String        @id @default(uuid())
  name            String
  revTag          String        @unique
  color           String
  auth0sub        String        @unique
  payed           Expense[]     @relation("Payer")
  participatedIn  Participant[]
  transferredTo   Transfer[]    @relation("userTo")
  transferredFrom Transfer[]    @relation("userFrom")
  QR              QR[]
}

model Expense {
  id            String        @id @default(uuid())
  title         String
  amount        Int
  payer         User          @relation("Payer", fields: [payerId], references: [id])
  payerId       String
  expenseItemId String
  items         ExpenseItem[]
  date          String?
}

model ExpenseItem {
  id           String        @id @default(uuid())
  name         String
  price        Int
  participants Participant[]
  expense      Expense       @relation(fields: [expenseId], references: [id])
  expenseId    String
}

model Participant {
  id            String      @id @default(uuid())
  expenseItemId String
  item          ExpenseItem @relation(fields: [expenseItemId], references: [id])
  userId        String
  user          User        @relation(fields: [userId], references: [id])
  shares        Float
}

model Transfer {
  id         String  @id @default(uuid())
  date       String?
  amount     Int
  userFrom   User    @relation("userFrom", fields: [userFromId], references: [id])
  userFromId String
  userTo     User    @relation("userTo", fields: [userToId], references: [id])
  userToId   String
}

model QR {
  id      String @id @default(uuid())
  amount  Int
  payToId String
  payTo   User   @relation(fields: [userId], references: [id])
  userId  String
}
